{"version":3,"file":"static/js/581.423f8b07.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/Pages/ContactsPage/ContactsPage.module.css?6772","Pages/ContactsPage/ContactsPage.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__UFVCg\",\"contactItem\":\"ContactList_contactItem__ppNQ5\",\"contactNumber\":\"ContactList_contactNumber__aD17w\",\"contactBtn\":\"ContactList_contactBtn__We0dD\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContactRequest } from 'redux/contactsOperations';\nimport { selectFilterContacts } from 'redux/selectors';\nimport css from './ContactList.module.css';\n\nexport function ContactList() {\n  const contacts = useSelector(selectFilterContacts);\n  const dispatch = useDispatch();\n\n  const onBtnDelete = e => {\n    dispatch(deleteContactRequest(e.target.id));\n  };\n\n  return (\n    <ul className={css.contactList}>\n      {contacts.map(item => (\n        <li className={css.contactItem} key={item.id}>\n          {item.name}:<span className={css.contactNumber}>{item.number}</span>\n          <button className={css.contactBtn} id={item.id} onClick={onBtnDelete}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsForm\":\"Filter_contactsForm__Y8srJ\",\"name\":\"Filter_name__ZiNRr\",\"userName\":\"Filter_userName__45P6I\"};","import { useSelector } from 'react-redux';\nimport propTypes from 'prop-types';\nimport css from './Filter.module.css';\n\nexport function Filter({ onChange }) {\n  const value = useSelector(state => state.contactsData.filter);\n\n  return (\n    <div className={css.contactsForm}>\n      <label className={css.name} htmlFor=\"\">\n        Find contacts by Name\n        <input\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n          className={css.userName}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  onChange: propTypes.func.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"ContactForm_phonebook__3VpZj\",\"addContact\":\"ContactForm_addContact__Q30Jz\",\"number\":\"ContactForm_number__RyoZN\",\"name\":\"ContactForm_name__ZqciK\",\"userName\":\"ContactForm_userName__nKnnW\",\"userNumber\":\"ContactForm_userNumber__oJXC2\"};","import propTypes from 'prop-types';\nimport { useState } from 'react';\nimport css from './ContactForm.module.css';\n\nexport function ContactForm(props) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.phonebook}>\n      <label className={css.name} htmlFor=\"\">\n        Name\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          className={css.userName}\n          name=\"name\"\n          value={name || ''}\n          required\n        />\n      </label>\n      <label className={css.number} htmlFor=\"\">\n        Number\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          className={css.userNumber}\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button type=\"submit\" className={css.addContact}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  props: propTypes.object,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"phonebook\":\"ContactsPage_phonebook__ntRA3\",\"phonebookTitle\":\"ContactsPage_phonebookTitle__XUREy\",\"contactTitle\":\"ContactsPage_contactTitle__dmfur\"};","// import { nanoid } from 'nanoid';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport css from '../ContactsPage/ContactsPage.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  getContactsRequest,\n  addContactRequest,\n} from 'redux/contactsOperations';\nimport { filterContacts } from 'redux/contactsSlice';\nimport { useEffect } from 'react';\nimport { selectFilter, selectiContactsItems } from 'redux/selectors';\n\nfunction ContactsPage() {\n  const contacts = useSelector(selectiContactsItems);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getContactsRequest());\n  }, [dispatch]);\n\n  const sendContact = contact => {\n    const repeatName = contacts.find(({ name }) => {\n      return contact.name === name;\n    });\n    if (repeatName) {\n      alert(`${contact.name} is already in your contacts!`);\n      return;\n    }\n    dispatch(addContactRequest({ ...contact }));\n  };\n\n  const handleFilter = e => {\n    const { value } = e.target;\n    dispatch(filterContacts(value));\n  };\n\n  return (\n    <div>\n      <div action=\"\" className={css.phonebook}>\n        <h1 className={css.phonebookTitle}>Phonebook</h1>\n        <ContactForm onSubmit={sendContact} />\n        <h1 className={css.contactTitle}>Contacts</h1>\n        <Filter onChange={handleFilter} value={filter} />\n        <ContactList />\n      </div>\n    </div>\n  );\n}\n\nexport default ContactsPage;\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\n// Auth\nexport const selectUserData = state => state.auth.authData;\nexport const selectUserName = state => state.auth.authData.name;\nexport const selectUserEmail = state => state.auth.authData.email;\nexport const selectToken = state => state.auth.token;\nexport const selectiIsLoading = state => state.auth.IsLoading;\nexport const selectError = state => state.auth.error;\n\n// Contacts\nexport const selectContacts = state => state.contactsData.contacts;\nexport const selectiContactsItems = state => state.contactsData.contacts.items;\nexport const selectContactsIsLoading = state =>\n  state.contactsData.contacts.IsLoading;\nexport const selectContactsError = state => state.contactsData.contacts.error;\nexport const selectFilter = state => state.contactsData.filter;\n\nexport const selectFilterContacts = createSelector(\n  [selectiContactsItems, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().trim().includes(filter.toLowerCase())\n    )\n);\n"],"names":["ContactList","contacts","useSelector","selectFilterContacts","dispatch","useDispatch","onBtnDelete","e","deleteContactRequest","target","id","className","css","map","item","name","number","onClick","Filter","onChange","value","state","contactsData","filter","htmlFor","type","ContactForm","props","useState","setName","setNumber","handleChange","reset","onSubmit","preventDefault","required","pattern","title","selectiContactsItems","selectFilter","useEffect","getContactsRequest","action","contact","find","alert","addContactRequest","filterContacts","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectUserEmail","auth","authData","email","selectToken","token","selectiIsLoading","IsLoading","items","toLowerCase","trim","includes"],"sourceRoot":""}